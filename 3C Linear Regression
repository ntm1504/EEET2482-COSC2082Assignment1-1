#include <iostream>

using namespace std;

//get sum of a list
double GetSum(double* arr, int size)
{
    long sum = 0;
    for (int i = 0; i < size; i++)
    {
        sum += arr[i];
    }
    return sum;
}
//return the mean of an array
double GetMean(double* arr, int size)
{
    double sum = GetSum(arr, size);
    double mean = sum / float(size);
    return mean;
}

//3 Variance
double Variance(double* arr, int size)
{
    //Get Means
    double mean = GetMean(arr, size);
    //cout<<"Mean is:"<<mean<<endl;
    double total = 0;
    //loop to get a sum of the square of difference of each number to mean

    for (int i = 0; i < size; i++)
    {
        double offset = arr[i] - mean;         //difference to mean
        double squareOffset = offset * offset; //square of the offset
        total += squareOffset;                 //add to total
    }

    //divide to the variance
    double result = total / (size - 1);
    return result * result;
}

//Pearson Correlation Coefficient
float CorrelationCoefficient(double* xArray, double* yArray, int size)
{
    //initualize
    double sum_X = GetSum(xArray, size);
    double sum_Y = GetSum(yArray, size);
    double sum_XY = 0;
    double squareSum_X = 0, squareSum_Y = 0;

    for (int i = 0; i < size; i++)
    {
        // sum of X[i] * Y[i].
        sum_XY += +xArray[i] * yArray[i];

        // sum of square of array elements.
        squareSum_X += xArray[i] * xArray[i];
        squareSum_Y += yArray[i] * yArray[i];
    }

    // Calculate correlation coefficient
    double corr = (double)(size * sum_XY - sum_X * sum_Y) / sqrt((size * squareSum_X - sum_X * sum_X) * (size * squareSum_Y - sum_Y * sum_Y));

    return corr;
}

//Linear Regresiion
//Slope (a)
double slope(double r, double sX, double sY) {
    double a = (r * sY) / sX;
    return a;
}

int main()
{
    double arrx[] = { 10, 19, 1, 3, 9, 100, 0, 22, 12, 65, 44 };
    double arry[] = { 18, 7, 16, 2, 22, 11, 20, 21, 9, 69, 55 };
    int m = sizeof(arrx) / sizeof(arrx[0]);
    int n = sizeof(arry) / sizeof(arry[0]);
    // variable
    double varX = Variance(arrx, m);
    double varY = Variance(arry, n);
    //standard deviation-- use below
    double sX = sqrt(varX);
    double sY = sqrt(varY);
    //CorrelationCoefficient
    double r = CorrelationCoefficient(arrx, arry, m);
    //Slope (a)
    double a = slope(r, sX, sY);
    //Intercept (b)
    double b = GetMean(arry, n) - a * GetMean(arrx, m);
    //Linear Regression
    cout << "y = " << a << "x + " << b;
}
